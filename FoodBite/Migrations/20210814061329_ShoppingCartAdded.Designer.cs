// <auto-generated />
using System;
using FoodBite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodBite.Migrations
{
    [DbContext(typeof(FoodbiteContext))]
    [Migration("20210814061329_ShoppingCartAdded")]
    partial class ShoppingCartAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodBite.Data.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderRequestId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodBite.Data.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("FoodBite.Data.Entities.OrderRequest", b =>
                {
                    b.Property<int>("OrderRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestPhone")
                        .HasColumnType("int");

                    b.HasKey("OrderRequestId");

                    b.ToTable("OrderRequests");
                });

            modelBuilder.Entity("FoodBite.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Image = "~/images/0fb3c319-ab08-4c09-a568-8aa089d9df89.jpeg",
                            ProductName = "Ribs & Wings + Chips",
                            ProductPrice = 70m
                        },
                        new
                        {
                            ProductId = 2,
                            Image = "~/images/43d5ecaa-7b70-44e0-9b0d-f1639b7d4aa9.jpeg",
                            ProductName = "Steak & Wors + Chips",
                            ProductPrice = 70m
                        },
                        new
                        {
                            ProductId = 3,
                            Image = "~/images/images.jpeg",
                            ProductName = "Chicken Dust + Chips Mild or Spicy",
                            ProductPrice = 100m
                        },
                        new
                        {
                            ProductId = 4,
                            Image = "~/images/54f194c0-1766-47a2-9d03-8b5682564918.jpeg",
                            ProductName = "Green Salad",
                            ProductPrice = 70m
                        },
                        new
                        {
                            ProductId = 5,
                            Image = "~/images/download.jpeg",
                            ProductName = "Fish + Chips Mild or Spicy",
                            ProductPrice = 100m
                        },
                        new
                        {
                            ProductId = 6,
                            Image = "~/images/images (1).jpeg",
                            ProductName = "Chichen Dust, Small Pops & Fish Cakes + Chips Mild or Spicy",
                            ProductPrice = 120m
                        },
                        new
                        {
                            ProductId = 7,
                            Image = "~/images/929c81e9-e8ac-4e93-bfa4-7839ab9fc2c0.jpeg",
                            ProductName = "Green Salad, Fish  + Chips",
                            ProductPrice = 100m
                        },
                        new
                        {
                            ProductId = 8,
                            Image = "~/images/download (2).jpeg",
                            ProductName = "Family Mixed Meat platter",
                            ProductPrice = 370m
                        },
                        new
                        {
                            ProductId = 9,
                            Image = "~/images/images (5).jpeg",
                            ProductName = "Family Meaty platter",
                            ProductPrice = 450m
                        });
                });

            modelBuilder.Entity("FoodBite.Data.Entities.Order", b =>
                {
                    b.HasOne("FoodBite.Data.Entities.OrderRequest", "OrderRequest")
                        .WithMany()
                        .HasForeignKey("OrderRequestId");

                    b.HasOne("FoodBite.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("OrderRequest");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FoodBite.Data.Entities.OrderItem", b =>
                {
                    b.HasOne("FoodBite.Data.Entities.Order", "Order")
                        .WithOne("OrderItem")
                        .HasForeignKey("FoodBite.Data.Entities.OrderItem", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodBite.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FoodBite.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderItem");
                });
#pragma warning restore 612, 618
        }
    }
}
